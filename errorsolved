https://codepen.io/choogoor/pen/YWBxAg

image upload feature-> https://codesandbox.io/s/50pp3xlv24
                    -> https://stackoverflow.com/questions/47604432/how-to-insert-upload-image-update-entity-and-blocks-in-draft-js

 image upload feature ->https://codesandbox.io/s/5w4rp50qkp
 					  -> https://stackoverflow.com/questions/46320355/upload-and-render-image-in-draft-js-based-editor

tutorials on drag and drop -> https://www.html5rocks.com/en/tutorials/dnd/basics/

=>webpackusage->https://stackoverflow.com/questions/43049748/invalid-configuration-object-in-webpack

=>teaches how to use eslint with webpack -> https://www.robinwieruch.de/react-eslint-webpack-babel/



/*
{
		      test: /\.jpe?g$|\.gif$|\.png$|\.ttf$|\.eot$|\.svg$/,
		      use: 'file-loader?name=[name].[ext]?[hash]'
		    },
		    {
		      test: /\.woff(2)?(\?v=[0-9]\.[0-9]\.[0-9])?$/,
		      loader: 'url-loader?limit=10000&mimetype=application/fontwoff'
		    }

*/

=>A very big error on routes - getting cannot found on refreshing solved working on server.js as shown with path . helpful link -> https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/template/README.md#serving-apps-with-client-side-routing

/*

Your mongodb service is probably down. Run sudo service mongod start to start the daemon process

*/

=>nodemailer real emails help -> https://medium.com/@manojsinghnegi/sending-an-email-using-nodemailer-gmail-7cfa0712a799




=>Uncaught SyntaxError: Unexpected token < and unable to handle routes with params error solved with =>{
 using 
	<script src="/app.js"></script>
	instead of
	<script src="app.js"></script>
}

=>https://stackoverflow.com/questions/46384591/node-was-compiled-against-a-different-node-js-version-using-node-module-versio

=>upgrading node - https://stackoverflow.com/questions/42045637/nodemailer-error-cant-fix

=> error on props.history.push solved by using withRouter . error was going to / instead of /dashboard rvrntho this.props.history.push('/dashboard') was used . 
https://stackoverflow.com/questions/46415297/pass-history-as-props-to-an-event-handler

=> eslint error of ->PropType is defined but prop is never used  react/no-unused-prop-types -> solved by adding -> "react/no-unused-prop-types": [<enabled>, { customValidators: <customValidator>, skipShapeProps: <skipShapeProps> }] ->in eslint rule 


=========================================================

/* eslint react/prop-types: 0 */
import React from 'react';
import PropTypes from 'prop-types';
import {connect} from 'react-redux';
import { Editor, EditorState , convertFromRaw ,CompositeDecorator} from 'draft-js';
import _ from 'lodash';
import ConfirmEmailMessage from '../messages/ConfirmEmailMessage';
import { allArticlesSelector } from '../../reducers/articles';
import { fetchArticles } from '../../actions/articles';

function findLinkEntities(contentBlock, callback, contentState) {
  contentBlock.findEntityRanges(
    (character) => {
      const entityKey = character.getEntity();
      return (
        entityKey !== null &&
        contentState.getEntity(entityKey).getType() === 'LINK'
      );
    },
    callback
  );
}

const Link = (props) => {
  const {url} = props.contentState.getEntity(props.entityKey).getData();
  return (
    <a href={url}>
      {props.children}
    </a>
  );
};


class DashboardPage extends React.Component{
	
	componentDidMount = () => {
		this.onInit(this.props);
	}

	onInit = (props) =>{
	 props.fetchArticles();
	}

	render(){
		 const decorator = new CompositeDecorator([
      {
        strategy: findLinkEntities,
        component: Link,
      },
    ]);
    
		const {isConfirmed, articles} = this.props;
		return(
			<div>
				{ !isConfirmed && <ConfirmEmailMessage />}
		
				{_.map(articles, article => {
                    const nn = article.articlestring;
                    const editorState = EditorState.createWithContent(convertFromRaw(JSON.parse(nn)), decorator);

             return (
                       <div>  

                          <div><pre>
                          	<Editor 
	                           editorState={editorState}
	                            readOnly 
                            	/>
                            </pre></div>
                       </div>
                   )}
                  )}
			</div>

			);

	}

}


DashboardPage.propTypes={
	isConfirmed:PropTypes.bool.isRequired,
	fetchArticles: PropTypes.func.isRequired,
	articles:PropTypes.arrayOf(PropTypes.string.isRequired).isRequired
};

function mapStateToProps(state){
	return{
		isConfirmed: !!state.user.confirmed,
		articles: allArticlesSelector(state)
	};
}

export default connect(mapStateToProps,{fetchArticles})(DashboardPage);






